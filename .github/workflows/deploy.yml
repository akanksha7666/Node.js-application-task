name: Deploy Dockerized App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Extract commit SHA for tagging
        id: vars
        run: echo "SHA_TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build and push Docker images
        run: |
          DOCKER_USER=${{ secrets.DOCKERHUB_USERNAME }}

          docker build -t $DOCKER_USER/admin:${{ env.SHA_TAG }} -t $DOCKER_USER/admin:latest ./admin
          docker build -t $DOCKER_USER/client-streaming:${{ env.SHA_TAG }} -t $DOCKER_USER/client-streaming:latest ./client-steaming
          docker build -t $DOCKER_USER/clientlient:${{ env.SHA_TAG }} -t $DOCKER_USER/clientlient:latest ./clientlient

          docker push $DOCKER_USER/admin:${{ env.SHA_TAG }}
          docker push $DOCKER_USER/admin:latest

          docker push $DOCKER_USER/client-streaming:${{ env.SHA_TAG }}
          docker push $DOCKER_USER/client-streaming:latest

          docker push $DOCKER_USER/clientlient:${{ env.SHA_TAG }}
          docker push $DOCKER_USER/clientlient:latest

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            DOCKER_USER=${{ secrets.DOCKERHUB_USERNAME }}

            # Change to your project directory
            cd /root/Node.js-application-task

            # Pull latest images
            docker pull $DOCKER_USER/admin:${{ env.SHA_TAG }}
            docker pull $DOCKER_USER/client-streaming:${{ env.SHA_TAG }}
            docker pull $DOCKER_USER/clientlient:${{ env.SHA_TAG }}

            # Stop and remove existing containers
            docker compose down || true

            # Update docker-compose.yml with new image versions
            sed -i "s|image: $DOCKER_USER/admin:.*|image: $DOCKER_USER/admin:${{ env.SHA_TAG }}|" docker-compose.yml
            sed -i "s|image: $DOCKER_USER/client-streaming:.*|image: $DOCKER_USER/client-streaming:${{ env.SHA_TAG }}|" docker-compose.yml
            sed -i "s|image: $DOCKER_USER/clientlient:.*|image: $DOCKER_USER/clientlient:${{ env.SHA_TAG }}|" docker-compose.yml

            # Start containers
            docker compose up -d

