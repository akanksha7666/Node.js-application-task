services:
  mysql:
    image: mysql:latest
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: platform
    ports:
      - "3306:3306"
    networks:
      - network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
      timeout: 5s

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - network

  admin:
    image: ${{ secrets.DOCKER_USERNAME }}/admin:${{ env.SHA_TAG }}  # Dynamically updated image
    container_name: admin
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - ./admin/.env  # Load environment variables from the .env file
    networks:
      - network
    ports:
      - "4000:4000"

  client-streaming:
    image: ${{ secrets.DOCKER_USERNAME }}/client-streaming:${{ env.SHA_TAG }}  # Dynamically updated image
    container_name: client-streaming
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - ./client-steaming/.env  # Load environment variables
    networks:
      - network
    ports:
      - "3200:3200"

  clientlient:
    image: ${{ secrets.DOCKER_USERNAME }}/clientlient:${{ env.SHA_TAG }}  # Dynamically updated image
    container_name: clientlient-service
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - ./clientlient/.env  # Load environment variables
    networks:
      - network
    ports:
      - "3001:3001"

networks:
  network:
    driver: bridge
